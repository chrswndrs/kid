{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/toolbar/ui.toolbar.base.js)\r\n * Version: 21.2.4\r\n * Build date: Mon Dec 06 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getWidth, getOuterWidth, getHeight } from \"../../core/utils/size\";\nimport $ from \"../../core/renderer\";\nimport { isMaterial, waitWebFont } from \"../themes\";\nimport { noop } from \"../../core/utils/common\";\nimport { isPlainObject } from \"../../core/utils/type\";\nimport registerComponent from \"../../core/component_registrator\";\nimport { inArray } from \"../../core/utils/array\";\nimport { extend } from \"../../core/utils/extend\";\nimport { each } from \"../../core/utils/iterator\";\nimport { getBoundingRect } from \"../../core/utils/position\";\nimport AsyncCollectionWidget from \"../collection/ui.collection_widget.async\";\nimport Promise from \"../../core/polyfills/promise\";\nimport { BindableTemplate } from \"../../core/templates/bindable_template\";\nimport errors from \"../../core/errors\";\nimport fx from \"../../animation/fx\";\nimport { TOOLBAR_CLASS } from \"./constants\";\nvar TOOLBAR_BEFORE_CLASS = \"dx-toolbar-before\";\nvar TOOLBAR_CENTER_CLASS = \"dx-toolbar-center\";\nvar TOOLBAR_AFTER_CLASS = \"dx-toolbar-after\";\nvar TOOLBAR_MINI_CLASS = \"dx-toolbar-mini\";\nvar TOOLBAR_ITEM_CLASS = \"dx-toolbar-item\";\nvar TOOLBAR_LABEL_CLASS = \"dx-toolbar-label\";\nvar TOOLBAR_BUTTON_CLASS = \"dx-toolbar-button\";\nvar TOOLBAR_ITEMS_CONTAINER_CLASS = \"dx-toolbar-items-container\";\nvar TOOLBAR_GROUP_CLASS = \"dx-toolbar-group\";\nvar TOOLBAR_COMPACT_CLASS = \"dx-toolbar-compact\";\nvar TOOLBAR_LABEL_SELECTOR = \".\" + TOOLBAR_LABEL_CLASS;\nvar TOOLBAR_MULTILINE_CLASS = \"dx-toolbar-multiline\";\nvar TEXT_BUTTON_MODE = \"text\";\nvar DEFAULT_BUTTON_TYPE = \"default\";\nvar TOOLBAR_ITEM_DATA_KEY = \"dxToolbarItemDataKey\";\nvar ToolbarBase = AsyncCollectionWidget.inherit({\n  compactMode: false,\n  ctor: function (element, options) {\n    this._userOptions = options || {};\n    this.callBase(element, options);\n\n    if (\"height\" in this._userOptions) {\n      errors.log(\"W0001\", this.NAME, \"height\", \"20.1\", \"Functionality associated with this option is not intended for the Toolbar widget.\");\n    }\n  },\n  _getSynchronizableOptionsForCreateComponent: function () {\n    return this.callBase().filter(item => \"disabled\" !== item);\n  },\n  _initTemplates: function () {\n    this.callBase();\n    var template = new BindableTemplate(function ($container, data, rawModel) {\n      if (isPlainObject(data)) {\n        if (data.text) {\n          $container.text(data.text).wrapInner(\"<div>\");\n        }\n\n        if (data.html) {\n          $container.html(data.html);\n        }\n\n        if (\"dxDropDownButton\" === data.widget) {\n          if (this.option(\"useFlatButtons\")) {\n            data.options = data.options || {};\n            data.options.stylingMode = data.options.stylingMode || TEXT_BUTTON_MODE;\n          }\n        }\n\n        if (\"dxButton\" === data.widget) {\n          if (this.option(\"useFlatButtons\")) {\n            data.options = data.options || {};\n            data.options.stylingMode = data.options.stylingMode || TEXT_BUTTON_MODE;\n          }\n\n          if (this.option(\"useDefaultButtons\")) {\n            data.options = data.options || {};\n            data.options.type = data.options.type || DEFAULT_BUTTON_TYPE;\n          }\n        }\n      } else {\n        $container.text(String(data));\n      }\n\n      this._getTemplate(\"dx-polymorph-widget\").render({\n        container: $container,\n        model: rawModel,\n        parent: this\n      });\n    }.bind(this), [\"text\", \"html\", \"widget\", \"options\"], this.option(\"integrationOptions.watchMethod\"));\n\n    this._templateManager.addDefaultTemplates({\n      item: template,\n      menuItem: template\n    });\n  },\n  _getDefaultOptions: function () {\n    return extend(this.callBase(), {\n      renderAs: \"topToolbar\",\n      grouped: false,\n      useFlatButtons: false,\n      useDefaultButtons: false,\n      multiline: false\n    });\n  },\n  _defaultOptionsRules: function () {\n    return this.callBase().concat([{\n      device: function () {\n        return isMaterial();\n      },\n      options: {\n        useFlatButtons: true\n      }\n    }]);\n  },\n  _itemContainer: function () {\n    return this._$toolbarItemsContainer.find([\".\" + TOOLBAR_BEFORE_CLASS, \".\" + TOOLBAR_CENTER_CLASS, \".\" + TOOLBAR_AFTER_CLASS].join(\",\"));\n  },\n  _itemClass: function () {\n    return TOOLBAR_ITEM_CLASS;\n  },\n  _itemDataKey: function () {\n    return TOOLBAR_ITEM_DATA_KEY;\n  },\n  _buttonClass: function () {\n    return TOOLBAR_BUTTON_CLASS;\n  },\n  _dimensionChanged: function () {\n    this._arrangeItems();\n\n    this._applyCompactMode();\n  },\n  _initMarkup: function () {\n    this._renderToolbar();\n\n    this._renderSections();\n\n    this.callBase();\n    this.setAria(\"role\", \"toolbar\");\n  },\n  _waitParentAnimationFinished: function () {\n    var $element = this.$element();\n    return new Promise(resolve => {\n      var runCheck = () => {\n        clearTimeout(this._waitParentAnimationTimeout);\n        this._waitParentAnimationTimeout = setTimeout(() => (() => {\n          var readyToResolve = true;\n          $element.parents().each((_, parent) => {\n            if (fx.isAnimating($(parent))) {\n              readyToResolve = false;\n              return false;\n            }\n          });\n\n          if (readyToResolve) {\n            resolve();\n          }\n\n          return readyToResolve;\n        })() || runCheck(), 15);\n      };\n\n      runCheck();\n    });\n  },\n  _render: function () {\n    this.callBase();\n\n    this._renderItemsAsync();\n\n    if (isMaterial()) {\n      Promise.all([this._waitParentAnimationFinished(), this._checkWebFontForLabelsLoaded()]).then(this._dimensionChanged.bind(this));\n    }\n  },\n  _postProcessRenderItems: function () {\n    this._arrangeItems();\n  },\n  _renderToolbar: function () {\n    this.$element().addClass(TOOLBAR_CLASS).toggleClass(TOOLBAR_MULTILINE_CLASS, this.option(\"multiline\"));\n    this._$toolbarItemsContainer = $(\"<div>\").addClass(TOOLBAR_ITEMS_CONTAINER_CLASS).appendTo(this.$element());\n  },\n  _renderSections: function () {\n    var $container = this._$toolbarItemsContainer;\n    var that = this;\n    each([\"before\", \"center\", \"after\"], function () {\n      var sectionClass = \"dx-toolbar-\" + this;\n      var $section = $container.find(\".\" + sectionClass);\n\n      if (!$section.length) {\n        that[\"_$\" + this + \"Section\"] = $section = $(\"<div>\").addClass(sectionClass).appendTo($container);\n      }\n    });\n  },\n  _checkWebFontForLabelsLoaded: function () {\n    var $labels = this.$element().find(TOOLBAR_LABEL_SELECTOR);\n    var promises = [];\n    $labels.each((_, label) => {\n      var text = $(label).text();\n      var fontWeight = $(label).css(\"fontWeight\");\n      promises.push(waitWebFont(text, fontWeight));\n    });\n    return Promise.all(promises);\n  },\n  _arrangeItems: function (elementWidth) {\n    elementWidth = elementWidth || getWidth(this.$element());\n\n    this._$centerSection.css({\n      margin: \"0 auto\",\n      float: \"none\"\n    });\n\n    var beforeRect = getBoundingRect(this._$beforeSection.get(0));\n    var afterRect = getBoundingRect(this._$afterSection.get(0));\n\n    this._alignCenterSection(beforeRect, afterRect, elementWidth);\n\n    var $label = this._$toolbarItemsContainer.find(TOOLBAR_LABEL_SELECTOR).eq(0);\n\n    var $section = $label.parent();\n\n    if (!$label.length) {\n      return;\n    }\n\n    var labelOffset = beforeRect.width ? beforeRect.width : $label.position().left;\n    var widthBeforeSection = $section.hasClass(TOOLBAR_BEFORE_CLASS) ? 0 : labelOffset;\n    var widthAfterSection = $section.hasClass(TOOLBAR_AFTER_CLASS) ? 0 : afterRect.width;\n    var elemsAtSectionWidth = 0;\n    $section.children().not(TOOLBAR_LABEL_SELECTOR).each(function () {\n      elemsAtSectionWidth += getOuterWidth(this);\n    });\n    var freeSpace = elementWidth - elemsAtSectionWidth;\n    var sectionMaxWidth = Math.max(freeSpace - widthBeforeSection - widthAfterSection, 0);\n\n    if ($section.hasClass(TOOLBAR_BEFORE_CLASS)) {\n      this._alignSection(this._$beforeSection, sectionMaxWidth);\n    } else {\n      var labelPaddings = getOuterWidth($label) - getWidth($label);\n      $label.css(\"maxWidth\", sectionMaxWidth - labelPaddings);\n    }\n  },\n  _alignCenterSection: function (beforeRect, afterRect, elementWidth) {\n    this._alignSection(this._$centerSection, elementWidth - beforeRect.width - afterRect.width);\n\n    var isRTL = this.option(\"rtlEnabled\");\n    var leftRect = isRTL ? afterRect : beforeRect;\n    var rightRect = isRTL ? beforeRect : afterRect;\n    var centerRect = getBoundingRect(this._$centerSection.get(0));\n\n    if (leftRect.right > centerRect.left || centerRect.right > rightRect.left) {\n      this._$centerSection.css({\n        marginLeft: leftRect.width,\n        marginRight: rightRect.width,\n        float: leftRect.width > rightRect.width ? \"none\" : \"right\"\n      });\n    }\n  },\n  _alignSection: function ($section, maxWidth) {\n    var $labels = $section.find(TOOLBAR_LABEL_SELECTOR);\n    var labels = $labels.toArray();\n    maxWidth -= this._getCurrentLabelsPaddings(labels);\n\n    var currentWidth = this._getCurrentLabelsWidth(labels);\n\n    var difference = Math.abs(currentWidth - maxWidth);\n\n    if (maxWidth < currentWidth) {\n      labels = labels.reverse();\n\n      this._alignSectionLabels(labels, difference, false);\n    } else {\n      this._alignSectionLabels(labels, difference, true);\n    }\n  },\n  _alignSectionLabels: function (labels, difference, expanding) {\n    var getRealLabelWidth = function (label) {\n      return getBoundingRect(label).width;\n    };\n\n    for (var i = 0; i < labels.length; i++) {\n      var $label = $(labels[i]);\n      var currentLabelWidth = Math.ceil(getRealLabelWidth(labels[i]));\n      var labelMaxWidth = void 0;\n\n      if (expanding) {\n        $label.css(\"maxWidth\", \"inherit\");\n      }\n\n      var possibleLabelWidth = Math.ceil(expanding ? getRealLabelWidth(labels[i]) : currentLabelWidth);\n\n      if (possibleLabelWidth < difference) {\n        labelMaxWidth = expanding ? possibleLabelWidth : 0;\n        difference -= possibleLabelWidth;\n      } else {\n        labelMaxWidth = expanding ? currentLabelWidth + difference : currentLabelWidth - difference;\n        $label.css(\"maxWidth\", labelMaxWidth);\n        break;\n      }\n\n      $label.css(\"maxWidth\", labelMaxWidth);\n    }\n  },\n  _applyCompactMode: function () {\n    var $element = this.$element();\n    $element.removeClass(TOOLBAR_COMPACT_CLASS);\n\n    if (this.option(\"compactMode\") && this._getSummaryItemsWidth(this.itemElements(), true) > getWidth($element)) {\n      $element.addClass(TOOLBAR_COMPACT_CLASS);\n    }\n  },\n  _getCurrentLabelsWidth: function (labels) {\n    var width = 0;\n    labels.forEach(function (label, index) {\n      width += getOuterWidth(label);\n    });\n    return width;\n  },\n  _getCurrentLabelsPaddings: function (labels) {\n    var padding = 0;\n    labels.forEach(function (label, index) {\n      padding += getOuterWidth(label) - getWidth(label);\n    });\n    return padding;\n  },\n  _renderItem: function (index, item, itemContainer, $after) {\n    var location = item.location || \"center\";\n    var container = itemContainer || this[\"_$\" + location + \"Section\"];\n    var itemHasText = !!(item.text || item.html);\n    var itemElement = this.callBase(index, item, container, $after);\n    itemElement.toggleClass(this._buttonClass(), !itemHasText).toggleClass(TOOLBAR_LABEL_CLASS, itemHasText).addClass(item.cssClass);\n    return itemElement;\n  },\n  _renderGroupedItems: function () {\n    var that = this;\n    each(this.option(\"items\"), function (groupIndex, group) {\n      var groupItems = group.items;\n      var $container = $(\"<div>\").addClass(TOOLBAR_GROUP_CLASS);\n      var location = group.location || \"center\";\n\n      if (!groupItems || !groupItems.length) {\n        return;\n      }\n\n      each(groupItems, function (itemIndex, item) {\n        that._renderItem(itemIndex, item, $container, null);\n      });\n\n      that._$toolbarItemsContainer.find(\".dx-toolbar-\" + location).append($container);\n    });\n  },\n  _renderItems: function (items) {\n    var grouped = this.option(\"grouped\") && items.length && items[0].items;\n    grouped ? this._renderGroupedItems() : this.callBase(items);\n  },\n  _getToolbarItems: function () {\n    return this.option(\"items\") || [];\n  },\n  _renderContentImpl: function () {\n    var items = this._getToolbarItems();\n\n    this.$element().toggleClass(TOOLBAR_MINI_CLASS, 0 === items.length);\n\n    if (this._renderedItemsCount) {\n      this._renderItems(items.slice(this._renderedItemsCount));\n    } else {\n      this._renderItems(items);\n    }\n\n    this._applyCompactMode();\n  },\n  _renderEmptyMessage: noop,\n  _clean: function () {\n    this._$toolbarItemsContainer.children().empty();\n\n    this.$element().empty();\n  },\n  _visibilityChanged: function (visible) {\n    if (visible) {\n      this._arrangeItems();\n    }\n  },\n  _isVisible: function () {\n    return getWidth(this.$element()) > 0 && getHeight(this.$element()) > 0;\n  },\n  _getIndexByItem: function (item) {\n    return inArray(item, this._getToolbarItems());\n  },\n  _itemOptionChanged: function (item, property, value) {\n    this.callBase.apply(this, [item, property, value]);\n\n    this._arrangeItems();\n  },\n  _optionChanged: function (args) {\n    var name = args.name;\n\n    switch (name) {\n      case \"width\":\n        this.callBase.apply(this, arguments);\n\n        this._dimensionChanged();\n\n        break;\n\n      case \"multiline\":\n        this.$element().toggleClass(TOOLBAR_MULTILINE_CLASS, args.value);\n        break;\n\n      case \"renderAs\":\n      case \"useFlatButtons\":\n      case \"useDefaultButtons\":\n        this._invalidate();\n\n        break;\n\n      case \"compactMode\":\n        this._applyCompactMode();\n\n        break;\n\n      case \"grouped\":\n        break;\n\n      default:\n        this.callBase.apply(this, arguments);\n    }\n  },\n  _dispose: function () {\n    this.callBase();\n    clearTimeout(this._waitParentAnimationTimeout);\n  }\n});\nregisterComponent(\"dxToolbarBase\", ToolbarBase);\nexport default ToolbarBase;","map":{"version":3,"sources":["/home/chrswndrs/Documents/poc/typescript/angular/kid/node_modules/devextreme/esm/ui/toolbar/ui.toolbar.base.js"],"names":["getWidth","getOuterWidth","getHeight","$","isMaterial","waitWebFont","noop","isPlainObject","registerComponent","inArray","extend","each","getBoundingRect","AsyncCollectionWidget","Promise","BindableTemplate","errors","fx","TOOLBAR_CLASS","TOOLBAR_BEFORE_CLASS","TOOLBAR_CENTER_CLASS","TOOLBAR_AFTER_CLASS","TOOLBAR_MINI_CLASS","TOOLBAR_ITEM_CLASS","TOOLBAR_LABEL_CLASS","TOOLBAR_BUTTON_CLASS","TOOLBAR_ITEMS_CONTAINER_CLASS","TOOLBAR_GROUP_CLASS","TOOLBAR_COMPACT_CLASS","TOOLBAR_LABEL_SELECTOR","TOOLBAR_MULTILINE_CLASS","TEXT_BUTTON_MODE","DEFAULT_BUTTON_TYPE","TOOLBAR_ITEM_DATA_KEY","ToolbarBase","inherit","compactMode","ctor","element","options","_userOptions","callBase","log","NAME","_getSynchronizableOptionsForCreateComponent","filter","item","_initTemplates","template","$container","data","rawModel","text","wrapInner","html","widget","option","stylingMode","type","String","_getTemplate","render","container","model","parent","bind","_templateManager","addDefaultTemplates","menuItem","_getDefaultOptions","renderAs","grouped","useFlatButtons","useDefaultButtons","multiline","_defaultOptionsRules","concat","device","_itemContainer","_$toolbarItemsContainer","find","join","_itemClass","_itemDataKey","_buttonClass","_dimensionChanged","_arrangeItems","_applyCompactMode","_initMarkup","_renderToolbar","_renderSections","setAria","_waitParentAnimationFinished","$element","resolve","runCheck","clearTimeout","_waitParentAnimationTimeout","setTimeout","readyToResolve","parents","_","isAnimating","_render","_renderItemsAsync","all","_checkWebFontForLabelsLoaded","then","_postProcessRenderItems","addClass","toggleClass","appendTo","that","sectionClass","$section","length","$labels","promises","label","fontWeight","css","push","elementWidth","_$centerSection","margin","float","beforeRect","_$beforeSection","get","afterRect","_$afterSection","_alignCenterSection","$label","eq","labelOffset","width","position","left","widthBeforeSection","hasClass","widthAfterSection","elemsAtSectionWidth","children","not","freeSpace","sectionMaxWidth","Math","max","_alignSection","labelPaddings","isRTL","leftRect","rightRect","centerRect","right","marginLeft","marginRight","maxWidth","labels","toArray","_getCurrentLabelsPaddings","currentWidth","_getCurrentLabelsWidth","difference","abs","reverse","_alignSectionLabels","expanding","getRealLabelWidth","i","currentLabelWidth","ceil","labelMaxWidth","possibleLabelWidth","removeClass","_getSummaryItemsWidth","itemElements","forEach","index","padding","_renderItem","itemContainer","$after","location","itemHasText","itemElement","cssClass","_renderGroupedItems","groupIndex","group","groupItems","items","itemIndex","append","_renderItems","_getToolbarItems","_renderContentImpl","_renderedItemsCount","slice","_renderEmptyMessage","_clean","empty","_visibilityChanged","visible","_isVisible","_getIndexByItem","_itemOptionChanged","property","value","apply","_optionChanged","args","name","arguments","_invalidate","_dispose"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/toolbar/ui.toolbar.base.js)\r\n * Version: 21.2.4\r\n * Build date: Mon Dec 06 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getWidth,\r\n    getOuterWidth,\r\n    getHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    isMaterial,\r\n    waitWebFont\r\n} from \"../themes\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isPlainObject\r\n} from \"../../core/utils/type\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport {\r\n    inArray\r\n} from \"../../core/utils/array\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport AsyncCollectionWidget from \"../collection/ui.collection_widget.async\";\r\nimport Promise from \"../../core/polyfills/promise\";\r\nimport {\r\n    BindableTemplate\r\n} from \"../../core/templates/bindable_template\";\r\nimport errors from \"../../core/errors\";\r\nimport fx from \"../../animation/fx\";\r\nimport {\r\n    TOOLBAR_CLASS\r\n} from \"./constants\";\r\nvar TOOLBAR_BEFORE_CLASS = \"dx-toolbar-before\";\r\nvar TOOLBAR_CENTER_CLASS = \"dx-toolbar-center\";\r\nvar TOOLBAR_AFTER_CLASS = \"dx-toolbar-after\";\r\nvar TOOLBAR_MINI_CLASS = \"dx-toolbar-mini\";\r\nvar TOOLBAR_ITEM_CLASS = \"dx-toolbar-item\";\r\nvar TOOLBAR_LABEL_CLASS = \"dx-toolbar-label\";\r\nvar TOOLBAR_BUTTON_CLASS = \"dx-toolbar-button\";\r\nvar TOOLBAR_ITEMS_CONTAINER_CLASS = \"dx-toolbar-items-container\";\r\nvar TOOLBAR_GROUP_CLASS = \"dx-toolbar-group\";\r\nvar TOOLBAR_COMPACT_CLASS = \"dx-toolbar-compact\";\r\nvar TOOLBAR_LABEL_SELECTOR = \".\" + TOOLBAR_LABEL_CLASS;\r\nvar TOOLBAR_MULTILINE_CLASS = \"dx-toolbar-multiline\";\r\nvar TEXT_BUTTON_MODE = \"text\";\r\nvar DEFAULT_BUTTON_TYPE = \"default\";\r\nvar TOOLBAR_ITEM_DATA_KEY = \"dxToolbarItemDataKey\";\r\nvar ToolbarBase = AsyncCollectionWidget.inherit({\r\n    compactMode: false,\r\n    ctor: function(element, options) {\r\n        this._userOptions = options || {};\r\n        this.callBase(element, options);\r\n        if (\"height\" in this._userOptions) {\r\n            errors.log(\"W0001\", this.NAME, \"height\", \"20.1\", \"Functionality associated with this option is not intended for the Toolbar widget.\")\r\n        }\r\n    },\r\n    _getSynchronizableOptionsForCreateComponent: function() {\r\n        return this.callBase().filter(item => \"disabled\" !== item)\r\n    },\r\n    _initTemplates: function() {\r\n        this.callBase();\r\n        var template = new BindableTemplate(function($container, data, rawModel) {\r\n            if (isPlainObject(data)) {\r\n                if (data.text) {\r\n                    $container.text(data.text).wrapInner(\"<div>\")\r\n                }\r\n                if (data.html) {\r\n                    $container.html(data.html)\r\n                }\r\n                if (\"dxDropDownButton\" === data.widget) {\r\n                    if (this.option(\"useFlatButtons\")) {\r\n                        data.options = data.options || {};\r\n                        data.options.stylingMode = data.options.stylingMode || TEXT_BUTTON_MODE\r\n                    }\r\n                }\r\n                if (\"dxButton\" === data.widget) {\r\n                    if (this.option(\"useFlatButtons\")) {\r\n                        data.options = data.options || {};\r\n                        data.options.stylingMode = data.options.stylingMode || TEXT_BUTTON_MODE\r\n                    }\r\n                    if (this.option(\"useDefaultButtons\")) {\r\n                        data.options = data.options || {};\r\n                        data.options.type = data.options.type || DEFAULT_BUTTON_TYPE\r\n                    }\r\n                }\r\n            } else {\r\n                $container.text(String(data))\r\n            }\r\n            this._getTemplate(\"dx-polymorph-widget\").render({\r\n                container: $container,\r\n                model: rawModel,\r\n                parent: this\r\n            })\r\n        }.bind(this), [\"text\", \"html\", \"widget\", \"options\"], this.option(\"integrationOptions.watchMethod\"));\r\n        this._templateManager.addDefaultTemplates({\r\n            item: template,\r\n            menuItem: template\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            renderAs: \"topToolbar\",\r\n            grouped: false,\r\n            useFlatButtons: false,\r\n            useDefaultButtons: false,\r\n            multiline: false\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return isMaterial()\r\n            },\r\n            options: {\r\n                useFlatButtons: true\r\n            }\r\n        }])\r\n    },\r\n    _itemContainer: function() {\r\n        return this._$toolbarItemsContainer.find([\".\" + TOOLBAR_BEFORE_CLASS, \".\" + TOOLBAR_CENTER_CLASS, \".\" + TOOLBAR_AFTER_CLASS].join(\",\"))\r\n    },\r\n    _itemClass: function() {\r\n        return TOOLBAR_ITEM_CLASS\r\n    },\r\n    _itemDataKey: function() {\r\n        return TOOLBAR_ITEM_DATA_KEY\r\n    },\r\n    _buttonClass: function() {\r\n        return TOOLBAR_BUTTON_CLASS\r\n    },\r\n    _dimensionChanged: function() {\r\n        this._arrangeItems();\r\n        this._applyCompactMode()\r\n    },\r\n    _initMarkup: function() {\r\n        this._renderToolbar();\r\n        this._renderSections();\r\n        this.callBase();\r\n        this.setAria(\"role\", \"toolbar\")\r\n    },\r\n    _waitParentAnimationFinished: function() {\r\n        var $element = this.$element();\r\n        return new Promise(resolve => {\r\n            var runCheck = () => {\r\n                clearTimeout(this._waitParentAnimationTimeout);\r\n                this._waitParentAnimationTimeout = setTimeout(() => (() => {\r\n                    var readyToResolve = true;\r\n                    $element.parents().each((_, parent) => {\r\n                        if (fx.isAnimating($(parent))) {\r\n                            readyToResolve = false;\r\n                            return false\r\n                        }\r\n                    });\r\n                    if (readyToResolve) {\r\n                        resolve()\r\n                    }\r\n                    return readyToResolve\r\n                })() || runCheck(), 15)\r\n            };\r\n            runCheck()\r\n        })\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._renderItemsAsync();\r\n        if (isMaterial()) {\r\n            Promise.all([this._waitParentAnimationFinished(), this._checkWebFontForLabelsLoaded()]).then(this._dimensionChanged.bind(this))\r\n        }\r\n    },\r\n    _postProcessRenderItems: function() {\r\n        this._arrangeItems()\r\n    },\r\n    _renderToolbar: function() {\r\n        this.$element().addClass(TOOLBAR_CLASS).toggleClass(TOOLBAR_MULTILINE_CLASS, this.option(\"multiline\"));\r\n        this._$toolbarItemsContainer = $(\"<div>\").addClass(TOOLBAR_ITEMS_CONTAINER_CLASS).appendTo(this.$element())\r\n    },\r\n    _renderSections: function() {\r\n        var $container = this._$toolbarItemsContainer;\r\n        var that = this;\r\n        each([\"before\", \"center\", \"after\"], (function() {\r\n            var sectionClass = \"dx-toolbar-\" + this;\r\n            var $section = $container.find(\".\" + sectionClass);\r\n            if (!$section.length) {\r\n                that[\"_$\" + this + \"Section\"] = $section = $(\"<div>\").addClass(sectionClass).appendTo($container)\r\n            }\r\n        }))\r\n    },\r\n    _checkWebFontForLabelsLoaded: function() {\r\n        var $labels = this.$element().find(TOOLBAR_LABEL_SELECTOR);\r\n        var promises = [];\r\n        $labels.each((_, label) => {\r\n            var text = $(label).text();\r\n            var fontWeight = $(label).css(\"fontWeight\");\r\n            promises.push(waitWebFont(text, fontWeight))\r\n        });\r\n        return Promise.all(promises)\r\n    },\r\n    _arrangeItems: function(elementWidth) {\r\n        elementWidth = elementWidth || getWidth(this.$element());\r\n        this._$centerSection.css({\r\n            margin: \"0 auto\",\r\n            float: \"none\"\r\n        });\r\n        var beforeRect = getBoundingRect(this._$beforeSection.get(0));\r\n        var afterRect = getBoundingRect(this._$afterSection.get(0));\r\n        this._alignCenterSection(beforeRect, afterRect, elementWidth);\r\n        var $label = this._$toolbarItemsContainer.find(TOOLBAR_LABEL_SELECTOR).eq(0);\r\n        var $section = $label.parent();\r\n        if (!$label.length) {\r\n            return\r\n        }\r\n        var labelOffset = beforeRect.width ? beforeRect.width : $label.position().left;\r\n        var widthBeforeSection = $section.hasClass(TOOLBAR_BEFORE_CLASS) ? 0 : labelOffset;\r\n        var widthAfterSection = $section.hasClass(TOOLBAR_AFTER_CLASS) ? 0 : afterRect.width;\r\n        var elemsAtSectionWidth = 0;\r\n        $section.children().not(TOOLBAR_LABEL_SELECTOR).each((function() {\r\n            elemsAtSectionWidth += getOuterWidth(this)\r\n        }));\r\n        var freeSpace = elementWidth - elemsAtSectionWidth;\r\n        var sectionMaxWidth = Math.max(freeSpace - widthBeforeSection - widthAfterSection, 0);\r\n        if ($section.hasClass(TOOLBAR_BEFORE_CLASS)) {\r\n            this._alignSection(this._$beforeSection, sectionMaxWidth)\r\n        } else {\r\n            var labelPaddings = getOuterWidth($label) - getWidth($label);\r\n            $label.css(\"maxWidth\", sectionMaxWidth - labelPaddings)\r\n        }\r\n    },\r\n    _alignCenterSection: function(beforeRect, afterRect, elementWidth) {\r\n        this._alignSection(this._$centerSection, elementWidth - beforeRect.width - afterRect.width);\r\n        var isRTL = this.option(\"rtlEnabled\");\r\n        var leftRect = isRTL ? afterRect : beforeRect;\r\n        var rightRect = isRTL ? beforeRect : afterRect;\r\n        var centerRect = getBoundingRect(this._$centerSection.get(0));\r\n        if (leftRect.right > centerRect.left || centerRect.right > rightRect.left) {\r\n            this._$centerSection.css({\r\n                marginLeft: leftRect.width,\r\n                marginRight: rightRect.width,\r\n                float: leftRect.width > rightRect.width ? \"none\" : \"right\"\r\n            })\r\n        }\r\n    },\r\n    _alignSection: function($section, maxWidth) {\r\n        var $labels = $section.find(TOOLBAR_LABEL_SELECTOR);\r\n        var labels = $labels.toArray();\r\n        maxWidth -= this._getCurrentLabelsPaddings(labels);\r\n        var currentWidth = this._getCurrentLabelsWidth(labels);\r\n        var difference = Math.abs(currentWidth - maxWidth);\r\n        if (maxWidth < currentWidth) {\r\n            labels = labels.reverse();\r\n            this._alignSectionLabels(labels, difference, false)\r\n        } else {\r\n            this._alignSectionLabels(labels, difference, true)\r\n        }\r\n    },\r\n    _alignSectionLabels: function(labels, difference, expanding) {\r\n        var getRealLabelWidth = function(label) {\r\n            return getBoundingRect(label).width\r\n        };\r\n        for (var i = 0; i < labels.length; i++) {\r\n            var $label = $(labels[i]);\r\n            var currentLabelWidth = Math.ceil(getRealLabelWidth(labels[i]));\r\n            var labelMaxWidth = void 0;\r\n            if (expanding) {\r\n                $label.css(\"maxWidth\", \"inherit\")\r\n            }\r\n            var possibleLabelWidth = Math.ceil(expanding ? getRealLabelWidth(labels[i]) : currentLabelWidth);\r\n            if (possibleLabelWidth < difference) {\r\n                labelMaxWidth = expanding ? possibleLabelWidth : 0;\r\n                difference -= possibleLabelWidth\r\n            } else {\r\n                labelMaxWidth = expanding ? currentLabelWidth + difference : currentLabelWidth - difference;\r\n                $label.css(\"maxWidth\", labelMaxWidth);\r\n                break\r\n            }\r\n            $label.css(\"maxWidth\", labelMaxWidth)\r\n        }\r\n    },\r\n    _applyCompactMode: function() {\r\n        var $element = this.$element();\r\n        $element.removeClass(TOOLBAR_COMPACT_CLASS);\r\n        if (this.option(\"compactMode\") && this._getSummaryItemsWidth(this.itemElements(), true) > getWidth($element)) {\r\n            $element.addClass(TOOLBAR_COMPACT_CLASS)\r\n        }\r\n    },\r\n    _getCurrentLabelsWidth: function(labels) {\r\n        var width = 0;\r\n        labels.forEach((function(label, index) {\r\n            width += getOuterWidth(label)\r\n        }));\r\n        return width\r\n    },\r\n    _getCurrentLabelsPaddings: function(labels) {\r\n        var padding = 0;\r\n        labels.forEach((function(label, index) {\r\n            padding += getOuterWidth(label) - getWidth(label)\r\n        }));\r\n        return padding\r\n    },\r\n    _renderItem: function(index, item, itemContainer, $after) {\r\n        var location = item.location || \"center\";\r\n        var container = itemContainer || this[\"_$\" + location + \"Section\"];\r\n        var itemHasText = !!(item.text || item.html);\r\n        var itemElement = this.callBase(index, item, container, $after);\r\n        itemElement.toggleClass(this._buttonClass(), !itemHasText).toggleClass(TOOLBAR_LABEL_CLASS, itemHasText).addClass(item.cssClass);\r\n        return itemElement\r\n    },\r\n    _renderGroupedItems: function() {\r\n        var that = this;\r\n        each(this.option(\"items\"), (function(groupIndex, group) {\r\n            var groupItems = group.items;\r\n            var $container = $(\"<div>\").addClass(TOOLBAR_GROUP_CLASS);\r\n            var location = group.location || \"center\";\r\n            if (!groupItems || !groupItems.length) {\r\n                return\r\n            }\r\n            each(groupItems, (function(itemIndex, item) {\r\n                that._renderItem(itemIndex, item, $container, null)\r\n            }));\r\n            that._$toolbarItemsContainer.find(\".dx-toolbar-\" + location).append($container)\r\n        }))\r\n    },\r\n    _renderItems: function(items) {\r\n        var grouped = this.option(\"grouped\") && items.length && items[0].items;\r\n        grouped ? this._renderGroupedItems() : this.callBase(items)\r\n    },\r\n    _getToolbarItems: function() {\r\n        return this.option(\"items\") || []\r\n    },\r\n    _renderContentImpl: function() {\r\n        var items = this._getToolbarItems();\r\n        this.$element().toggleClass(TOOLBAR_MINI_CLASS, 0 === items.length);\r\n        if (this._renderedItemsCount) {\r\n            this._renderItems(items.slice(this._renderedItemsCount))\r\n        } else {\r\n            this._renderItems(items)\r\n        }\r\n        this._applyCompactMode()\r\n    },\r\n    _renderEmptyMessage: noop,\r\n    _clean: function() {\r\n        this._$toolbarItemsContainer.children().empty();\r\n        this.$element().empty()\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this._arrangeItems()\r\n        }\r\n    },\r\n    _isVisible: function() {\r\n        return getWidth(this.$element()) > 0 && getHeight(this.$element()) > 0\r\n    },\r\n    _getIndexByItem: function(item) {\r\n        return inArray(item, this._getToolbarItems())\r\n    },\r\n    _itemOptionChanged: function(item, property, value) {\r\n        this.callBase.apply(this, [item, property, value]);\r\n        this._arrangeItems()\r\n    },\r\n    _optionChanged: function(args) {\r\n        var name = args.name;\r\n        switch (name) {\r\n            case \"width\":\r\n                this.callBase.apply(this, arguments);\r\n                this._dimensionChanged();\r\n                break;\r\n            case \"multiline\":\r\n                this.$element().toggleClass(TOOLBAR_MULTILINE_CLASS, args.value);\r\n                break;\r\n            case \"renderAs\":\r\n            case \"useFlatButtons\":\r\n            case \"useDefaultButtons\":\r\n                this._invalidate();\r\n                break;\r\n            case \"compactMode\":\r\n                this._applyCompactMode();\r\n                break;\r\n            case \"grouped\":\r\n                break;\r\n            default:\r\n                this.callBase.apply(this, arguments)\r\n        }\r\n    },\r\n    _dispose: function() {\r\n        this.callBase();\r\n        clearTimeout(this._waitParentAnimationTimeout)\r\n    }\r\n});\r\nregisterComponent(\"dxToolbarBase\", ToolbarBase);\r\nexport default ToolbarBase;\r\n"]},"metadata":{},"sourceType":"module"}